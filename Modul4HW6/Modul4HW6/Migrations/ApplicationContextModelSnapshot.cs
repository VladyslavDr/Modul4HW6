// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modul4HW6.DataAccess;

namespace Modul4HW6.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Modul4HW6.Entities.Artists", b =>
                {
                    b.Property<int>("ArtistsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateOfBirth");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Email");

                    b.Property<string>("InstagramUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("InstagramUrl");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Phone");

                    b.HasKey("ArtistsId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            ArtistsId = 1,
                            DateOfBirth = new DateTime(2007, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "OlegPisnyar228@mail.ru",
                            InstagramUrl = "https://www.instagram.com/OlegPisnyar",
                            Name = "Oleg",
                            Phone = "+380993255632"
                        },
                        new
                        {
                            ArtistsId = 2,
                            DateOfBirth = new DateTime(1961, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "BoriaNagibator@mail.ru",
                            InstagramUrl = "https://www.instagram.com/BoriaNagibator1961",
                            Name = "Boria",
                            Phone = "+380999865002"
                        },
                        new
                        {
                            ArtistsId = 3,
                            DateOfBirth = new DateTime(1999, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "OlexandraLampovna1991@mail.ru",
                            InstagramUrl = "https://www.instagram.com/Lampovna11",
                            Name = "Olexa",
                            Phone = "+380667899945"
                        },
                        new
                        {
                            ArtistsId = 4,
                            DateOfBirth = new DateTime(1988, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Din_Don@mail.ru",
                            InstagramUrl = "https://www.instagram.com/DonDon1988ProMaxMegaUltra",
                            Name = "Den",
                            Phone = "+380665593712"
                        },
                        new
                        {
                            ArtistsId = 5,
                            DateOfBirth = new DateTime(1998, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "MaryMore@mail.ru",
                            InstagramUrl = "https://www.instagram.com/InstaProKa4kaMary",
                            Name = "Mary",
                            Phone = "+380986347196"
                        });
                });

            modelBuilder.Entity("Modul4HW6.Entities.ArtistsSongs", b =>
                {
                    b.Property<int>("ArtistsSongsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistsId")
                        .HasColumnType("int");

                    b.Property<int>("SongsId")
                        .HasColumnType("int");

                    b.HasKey("ArtistsSongsId");

                    b.HasIndex("ArtistsId");

                    b.HasIndex("SongsId");

                    b.ToTable("ArtistsSongs");

                    b.HasData(
                        new
                        {
                            ArtistsSongsId = 1,
                            ArtistsId = 1,
                            SongsId = 1
                        },
                        new
                        {
                            ArtistsSongsId = 2,
                            ArtistsId = 1,
                            SongsId = 2
                        },
                        new
                        {
                            ArtistsSongsId = 3,
                            ArtistsId = 2,
                            SongsId = 3
                        },
                        new
                        {
                            ArtistsSongsId = 4,
                            ArtistsId = 2,
                            SongsId = 4
                        },
                        new
                        {
                            ArtistsSongsId = 5,
                            ArtistsId = 3,
                            SongsId = 1
                        },
                        new
                        {
                            ArtistsSongsId = 6,
                            ArtistsId = 4,
                            SongsId = 4
                        },
                        new
                        {
                            ArtistsSongsId = 7,
                            ArtistsId = 5,
                            SongsId = 4
                        },
                        new
                        {
                            ArtistsSongsId = 8,
                            ArtistsId = 5,
                            SongsId = 5
                        });
                });

            modelBuilder.Entity("Modul4HW6.Entities.Genres", b =>
                {
                    b.Property<int>("GenresId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Title");

                    b.HasKey("GenresId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenresId = 1,
                            Title = "Rok"
                        },
                        new
                        {
                            GenresId = 2,
                            Title = "Rap"
                        },
                        new
                        {
                            GenresId = 3,
                            Title = "Pop"
                        },
                        new
                        {
                            GenresId = 4,
                            Title = "Classic"
                        },
                        new
                        {
                            GenresId = 5,
                            Title = "jas"
                        });
                });

            modelBuilder.Entity("Modul4HW6.Entities.Songs", b =>
                {
                    b.Property<int>("SongsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Duration")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Duration");

                    b.Property<int>("GenresId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleasedData")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReleasedData");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Title");

                    b.HasKey("SongsId");

                    b.HasIndex("GenresId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            SongsId = 1,
                            Duration = 5.1m,
                            GenresId = 1,
                            ReleasedData = new DateTime(2005, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Oduvan4ik"
                        },
                        new
                        {
                            SongsId = 2,
                            Duration = 4.055m,
                            GenresId = 2,
                            ReleasedData = new DateTime(2020, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Mu-mu-mu"
                        },
                        new
                        {
                            SongsId = 3,
                            Duration = 2.17m,
                            GenresId = 3,
                            ReleasedData = new DateTime(2019, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "NigaGan"
                        },
                        new
                        {
                            SongsId = 4,
                            Duration = 5.02m,
                            GenresId = 4,
                            ReleasedData = new DateTime(2018, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "PoleRodimoeMoe"
                        },
                        new
                        {
                            SongsId = 5,
                            Duration = 2.16m,
                            GenresId = 5,
                            ReleasedData = new DateTime(2001, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "2GusiaUbabusi"
                        });
                });

            modelBuilder.Entity("Modul4HW6.Entities.ArtistsSongs", b =>
                {
                    b.HasOne("Modul4HW6.Entities.Artists", "Artists")
                        .WithMany("Songs")
                        .HasForeignKey("ArtistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modul4HW6.Entities.Songs", "Songs")
                        .WithMany("Artists")
                        .HasForeignKey("SongsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artists");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Modul4HW6.Entities.Songs", b =>
                {
                    b.HasOne("Modul4HW6.Entities.Genres", "Genres")
                        .WithMany("Songs")
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genres");
                });

            modelBuilder.Entity("Modul4HW6.Entities.Artists", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Modul4HW6.Entities.Genres", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Modul4HW6.Entities.Songs", b =>
                {
                    b.Navigation("Artists");
                });
#pragma warning restore 612, 618
        }
    }
}
